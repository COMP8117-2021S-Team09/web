[{"G:\\TU_S3\\src\\index.js":"1","G:\\TU_S3\\src\\Components\\Content.js":"2","G:\\TU_S3\\src\\Components\\Header.js":"3","G:\\TU_S3\\src\\Components\\ValidatedLoginForm.js":"4","G:\\TU_S3\\src\\App.js":"5","G:\\TU_S3\\src\\Components\\Plans.js":"6","G:\\TU_S3\\src\\Components\\SellerDashboard.js":"7","G:\\TU_S3\\src\\Components\\Gallery.js":"8","G:\\TU_S3\\src\\Components\\Card.js":"9","G:\\TU_S3\\src\\Components\\ViewSellerOrders.js":"10","G:\\TU_S3\\src\\Components\\BuyerInfo.js":"11","G:\\TU_S3\\src\\Components\\Sign_Up.js":"12","G:\\TU_S3\\src\\Components\\CustomSelect.js":"13","G:\\TU_S3\\src\\Components\\AddPlan.js":"14","G:\\TU_S3\\src\\Components\\Footer.js":"15"},{"size":545,"mtime":1626541968982,"results":"16","hashOfConfig":"17"},{"size":12191,"mtime":1626887024848,"results":"18","hashOfConfig":"17"},{"size":2089,"mtime":1626882926399,"results":"19","hashOfConfig":"17"},{"size":5973,"mtime":1626863369058,"results":"20","hashOfConfig":"17"},{"size":1594,"mtime":1626689697662,"results":"21","hashOfConfig":"17"},{"size":8383,"mtime":1626541968979,"results":"22","hashOfConfig":"17"},{"size":172,"mtime":1626550989510,"results":"23","hashOfConfig":"17"},{"size":9874,"mtime":1626887475248,"results":"24","hashOfConfig":"17"},{"size":4072,"mtime":1626541968976,"results":"25","hashOfConfig":"17"},{"size":2751,"mtime":1626787782141,"results":"26","hashOfConfig":"17"},{"size":8735,"mtime":1626541968974,"results":"27","hashOfConfig":"17"},{"size":7499,"mtime":1626860486266,"results":"28","hashOfConfig":"17"},{"size":875,"mtime":1626689294949,"results":"29","hashOfConfig":"17"},{"size":7951,"mtime":1626959788732,"results":"30","hashOfConfig":"17"},{"size":549,"mtime":1626541968977,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"pbm83x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"G:\\TU_S3\\src\\index.js",[],["79","80"],"G:\\TU_S3\\src\\Components\\Content.js",["81","82","83","84"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Gallery from './Gallery';\r\nimport './content.css';\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { HorizontalSplitRounded } from '@material-ui/icons';\r\nimport { spacing } from '@material-ui/system';\r\n\r\n\r\nvar cuisines = [];  \r\nvar category =[];\r\nfunction Content() {\r\n  const [seller, setSeller] = useState([]);\r\n  const url = 'https://tiffin-umbrella.herokuapp.com/get_seller_list';\r\n\r\n  useEffect(() => {\r\n    let fetchData = async () => {\r\n\r\n      const request = await axios.get(url);\r\n      console.log(request.data.sellers);\r\n      setSeller(request.data);\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n\r\n  }, [url]);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  var show = true;\r\n  function passIdToNext(idTosent) {\r\n    console.log(idTosent);\r\n\r\n  }\r\n\r\n  function handleFilterClick(keyCui) {\r\n    console.log(keyCui)\r\n    if (document.getElementById(keyCui).checked) {\r\n      cuisines.push(keyCui)\r\n    }\r\n    else {\r\n      cuisines = cuisines.filter(e => e !== keyCui);\r\n    }\r\n    console.log(cuisines)\r\n  }\r\n\r\n  function handleFilterCategories(categories) {\r\n    console.log(categories)\r\n    if (document.getElementById(categories).checked) {\r\n      category.push(categories)\r\n    }\r\n    else {\r\n      category = category.filter(e => e !== categories);\r\n    }\r\n    console.log(category)\r\n  }\r\n\r\n  function showCheckboxes() {\r\n    var checkboxes =\r\n      document.getElementById(\"checkBoxes\");\r\n\r\n    if (show) {\r\n      checkboxes.style.display = \"block\";\r\n      show = false;\r\n    } else {\r\n      checkboxes.style.display = \"none\";\r\n      show = true;\r\n    }\r\n  }\r\n\r\n  function preparations(arr) {\r\n    let v = \"\";\r\n    arr.forEach(element => {\r\n      v += element + \" \";\r\n      \r\n    });\r\n    return v;\r\n  }\r\n\r\n  // function test1(s) {\r\n  //   let t=[];\r\n  //   t=s;\r\n  //   return t[0];\r\n  // }\r\n\r\n  function test2(s1) {\r\n    let t1=[];\r\n    t1=s1;\r\n    return t1[1];\r\n  }\r\n  \r\n  function test3(t2){\r\n    let t3=[];\r\n    t3=t2;\r\n    if ( t3[0] === \"NON_VEG\"){\r\n      let k = \" NON-VEG,\";\r\n      return k;\r\n    }\r\n    else if(t3[0] === \"EGG\"){\r\n      return \"EGG\";\r\n    }\r\n  \r\n  }\r\n\r\n  function status(st){\r\n    if ( st == \"VERIFIED\"){\r\n      return<img className=\"status\" src={\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/whatsapp/273/check-mark-button_2705.png\"} alt=\"Logo\"/>;\r\n    }\r\n    else{\r\n      return<img className=\"status\" src={\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/cross-mark_274c.png\"} alt=\"logo\"/>;\r\n    }\r\n  }\r\n\r\n  async function filterResults() {\r\n\r\n    const url = 'https://tiffin-umbrella.herokuapp.com/get_seller_list';\r\n    const apiResponse = await axios({\r\n      method: 'post',\r\n      url: url,\r\n      headers: {},\r\n      data: {\r\n        cuisines: cuisines,\r\n        categories: category\r\n\r\n      }\r\n    });\r\n    setSeller(apiResponse.data)\r\n    //console.log(apiResponse);\r\n    //console.log(apiResponse.data);\r\n\r\n\r\n  }\r\n\r\n  // function handleImage(){\r\n  //   const data = 'R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw=='\r\n  //   const Example = ({ data }) => <img src={`data:image/jpeg;base64,${data}`} />\r\n  // }\r\n  return (\r\n\r\n    <div>\r\n\r\n\r\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\"></link>\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n\r\n\r\n      <section className=\"\">\r\n\r\n        <div id=\"carousel\" className=\"carousel slide\" data-ride=\"carousel\" data-interval=\"6000\">\r\n          <div className=\"carousel-inner\">\r\n\r\n            <div className=\"carousel-item active\">\r\n\r\n              <img className=\"d-block w-100\" src=\"Images/MainPage_2ndPic.png\" alt=\"First slide\" style={{ height: \"600px\" }} />\r\n              <div className=\"centered\">\r\n                <Animated animationIn=\"bounceInDown\" animationInDelay=\"2000\" isVisible={true}> <p className=\"main\"><b>Welcome to Tiffin Umbrella</b></p> </Animated>\r\n                <Animated animationIn=\"bounceInRight\" animationInDelay=\"3000\" isVisible={true}><p className=\"caption\">Safe and healthy food</p></Animated>\r\n                <Animated animationIn=\"bounceInUp\" animationInDelay=\"5000\" isVisible={true}> <p className=\"box\"><b>Call us now- 983-765-4321</b></p> </Animated>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img className=\"d-block w-100 \" src=\"Images/tiffin-3.jpeg\" alt=\"Second slide\" style={{ height: \"600px\" }} />\r\n              <div className=\"centered\"><Animated animationIn=\"bounceInDown\" animationInDelay=\"2000\" isVisible={true}> <p className=\"main\"><b>Welcome to Tiffin Umbrella</b></p> </Animated>\r\n                <Animated animationIn=\"bounceInRight\" animationInDelay=\"3000\" isVisible={true}><p className=\"caption\">Delivered to your door</p></Animated>\r\n                <Animated animationIn=\"bounceInUp\" animationInDelay=\"5000\" isVisible={true}> <p className=\"box\"><b>Call us now- 983-765-4321</b></p> </Animated>\r\n              </div>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img className=\"d-block w-100\" src=\"Images/new-tiffin-1.jpeg\" alt=\"Third slide\" style={{ height: \"600px\" }} />\r\n              <div className=\"centered\">\r\n                <Animated animationIn=\"bounceInDown\" animationInDelay=\"2000\" isVisible={true}> <p className=\"main\"><b>Welcome to Tiffin Umbrella</b></p> </Animated>\r\n                <Animated animationIn=\"bounceInRight\" animationInDelay=\"3000\" isVisible={true}><p className=\"caption\">Authentic Indian Food</p></Animated>\r\n                <Animated animationIn=\"bounceInUp\" animationInDelay=\"5000\" isVisible={true}> <p className=\"box\"><b>Call us now- 983-765-4321</b></p> </Animated>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"bg-light\" id=\"about\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12\">\r\n              <h3 className=\"text-center mt-4 text-secondary\">Know about us</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <p className=\"mt-4 mb-5\">Hello, we are glad that you are here! Before you place the order, let us share about this\r\n              service. How we started and how we are doing.Hello, we are glad that you are here! Before you place the order, let us share about this\r\n              service. How we started and how we are doing.Hello, we are glad that you are here! Before you place the order, let us share about this\r\n              service. How we started and how we are doing.\r\n\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"\" id=\"tiffinproviders\" style={{ backgroundColor: \"whitesmoke\" }}>\r\n        <div className=\"container\" style={{ backgroundColor: \"whitesmoke\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12\">\r\n              <h3 className=\"text-center mt-4 text-secondary\">Tiffin Providers</h3>\r\n            </div>\r\n          </div>\r\n          <FormControl>\r\n            <form>\r\n            <div className=\"filterbox\">\r\n              <div class=\"multipleSelection\">\r\n                \r\n                <div class=\"selectBox\"\r\n                  onClick={showCheckboxes}>\r\n                  <select>\r\n                    <option>Filter options</option>\r\n                  </select> \r\n                  <div class=\"overSelect\"></div>\r\n                </div>\r\n                </div>\r\n\r\n                <div id=\"checkBoxes\">\r\n                  <label for=\"first\">\r\n                    <input type=\"checkbox\" id=\"VEG\" value=\"VEG\" onClick={() => handleFilterCategories(\"VEG\")} /> \r\n                     &nbsp; VEG\r\n                  </label>\r\n\r\n                  <label for=\"second\">\r\n                    <input type=\"checkbox\" value=\"NON_VEG\" id=\"NON_VEG\" onClick={() => handleFilterCategories(\"NON_VEG\")} />\r\n                    &nbsp; NON-VEG\r\n                  </label>\r\n                  <label for=\"third\">\r\n                    <input type=\"checkbox\" value=\"GUJARATI\" id=\"GUJARATI\" onClick={() => handleFilterClick(\"GUJARATI\")} />\r\n                    &nbsp; GUJARATI\r\n                  </label>\r\n                  <label for=\"fourth\">\r\n                    <input type=\"checkbox\" id=\"PUNJABI\" value=\"PUNJABI\" onClick={() => handleFilterClick(\"PUNJABI\")} />\r\n                    &nbsp; PUNJABI\r\n                  </label>\r\n                  <label for=\"fifth\">\r\n                    <input type=\"checkbox\" id=\"CHINESE\" value=\"CHINESE\" onClick={() => handleFilterClick(\"CHINESE\")} />\r\n                    &nbsp; CHINESE\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </FormControl>\r\n          <button className=\"btn btn-primary filterdesign\" onClick={filterResults}>Apply Filter</button>\r\n          <div className=\"container-fluid\" >\r\n            <div className=\"row\">\r\n\r\n              {\r\n              \r\n                seller.map(seller => (\r\n                  \r\n                <div className=\"col-sm-4 w\" >\r\n                  <div className=\"card mt-4\">\r\n                   <img className=\"card-img-top\" style={{ maxHeight: \"180px\" }} src={seller && seller.imageUrl ? seller.imageUrl : \"Images/No-image.jpg\"} alt=\"\" />\r\n                    <div className=\"card-body\">\r\n                      <h4 className=\"card-title text-secondary\">{seller.name}&nbsp;{status(seller.status)}</h4>\r\n                      <p className=\"card-text text-secondary\">{truncate(seller?.description, 70)}</p>\r\n                      <p className=\"card-text text-secondary\"><h6><strong>Average price per person :</strong> {seller && seller.averagePricePerPerson ? \"$\"+seller.averagePricePerPerson : \"N.A\"}</h6></p>\r\n                      <p className=\"card-text text-secondary\" ><strong>Categories available :</strong> <className style={{ color: \"red\"}}> {seller && seller.categories ? test3(seller.categories) : \"N.A\" }</className>  <className style={{ color: \"green\"}}>{seller && seller.categories ? test2(seller.categories) : \"N.A\"}</className></p>\r\n                      <p className=\"card-text text-secondary\" style={{ maxHeight: \"10px\", marginBottom: \"30px\" }}><h6><strong>Cuisines available : </strong>{ seller && seller.cuisines ? preparations(seller.cuisines) : \"N.A\"}</h6></p>\r\n                      <p className=\"card-text text-secondary\" type=\"hidden\" value={seller.id}></p>\r\n                    </div>\r\n                    <div className=\"card-footer\" >\r\n                  \r\n                      <Link to={{\r\n                        pathname: \"/plans\",\r\n                        data: { seller_id: seller.id, seller_name: seller.name, sellerimage:seller.imageUrl }\r\n                      }} className=\"btn btn-primary\" onClick={() => passIdToNext(seller.id)}>Find Out More</Link> \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              ))}\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <section className=\"bg-light\" id=\"gallery\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-12\">\r\n                  <h3 className=\"text-center mt-4 text-secondary\">Gallery</h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <Gallery />\r\n              </div>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  {/* <img src=\"Images/new-tiffin-2.jpeg\" alt=\"Cinque Terre\" width=\"600\" height=\"400\"></img> */}\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </section>\r\n\r\n          \r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;","G:\\TU_S3\\src\\Components\\Header.js",[],["85","86"],"G:\\TU_S3\\src\\Components\\ValidatedLoginForm.js",["87","88","89","90","91","92"],"import React from \"react\";\r\nimport './styles.css';\r\nimport { Typography, Link } from '@material-ui/core'\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport Axios from 'axios'; \r\nimport ViewSellerOrders from './ViewSellerOrders';\r\nimport {useState} from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\n \r\nfunction ValidatedLoginForm (props) {\r\n\r\n    const [redirect, setRedirect] =useState(false);\r\n    const [history, setHistory]= useState(useHistory());\r\n    return <Formik\r\n    initialValues={{ email: \"\", password: \"\" }}\r\n    onSubmit={(values, props) => {\r\n      console.log(values)\r\n      setTimeout(() => {\r\n        props.resetForm()\r\n        props.setSubmitting(false)\r\n      }, 2000)\r\n      console.log(props)\r\n      console.log('Form data', values)\r\n      \r\n      const postData = {\r\n        email: values.email,\r\n        password: values.password,\r\n        role: \"SELLER\"\r\n        \r\n        \r\n      };\r\n\r\n      Axios.post(\"https://tiffin-umbrella.herokuapp.com/login\", postData, { headers: { 'Content-Type': 'application/json' } })\r\n        .then(res => {  if(res.status!=200){\r\n          alert(\"Invalid Email ID/Password\")\r\n        } else if(res.status === 200) {\r\n          \r\n          console.log(\"Success\");\r\n        //   window.localStorage.setItem(\"sellerid\", res.data.id);\r\n        //  window.location=\"/viewsellerorders\";\r\n          //console.log(res.data.id);\r\n         history.push({\r\n           pathname: \"/viewsellerorders\",\r\n           id: res.data.id\r\n          });\r\n          //return <Redirect to=\"/viewsellerorders\" />\r\n        }})\r\n        .catch(errors => { console.log(errors) })\r\n\r\n    }}\r\n    /* onSubmit={(values, { setSubmitting }) => {\r\n       setTimeout(() => {\r\n         console.log(\"Logging in\", values);\r\n        // onSubmitProps.resetForm();\r\n         setSubmitting(false);\r\n       }, 500);\r\n     // onSubmitProps.resetForm();\r\n     }} */\r\n\r\n\r\n\r\n    validate={values => {\r\n      let errors = {};\r\n      if (!values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (!EmailValidator.validate(values.email)) {\r\n        errors.email = \"Invalid email address.\";\r\n      }\r\n\r\n      // const passwordRegex = /(?=.*[0-9])/;\r\n      // if (!values.password) {\r\n      //   errors.password = \"Required\";\r\n      // } else if (values.password.length < 8) {\r\n      //   errors.password = \"Password must be 8 characters long.\";\r\n      \r\n      // } else if (!passwordRegex.test(values.password)) {\r\n      //   errors.password = \"Invalid password. Must contain one number.\";\r\n      // }\r\n\r\n      return errors;\r\n    }}\r\n    validationSchema={Yup.object().shape({\r\n      email: Yup.string()\r\n        .email()\r\n        .required(\"Required\"),\r\n      password: Yup.string()\r\n        .required(\"No password provided.\")\r\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n        // .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n    })}\r\n  >\r\n\r\n    {props => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n      } = props;\r\n\r\n      /* const onSubmit=(values,props)=>{\r\n         console.log(values)\r\n         setTimeout(()=>{\r\n           props.resetForm()\r\n           props.setSubmitting(false)\r\n         },2000)\r\n         console.log(props)\r\n       }\r\n       */\r\n      \r\n      return (\r\n        <div>\r\n        <div className='t'>\r\n          <div>\r\n          <div className='p'>\r\n            <form onSubmit={handleSubmit}>\r\n              <h1 >Log-In Form</h1>\r\n              <br />\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={errors.email && touched.email && \"error\"}\r\n              />\r\n              {errors.email && touched.email && (\r\n                <div className=\"input-feedback\">{errors.email}</div>\r\n              )}\r\n\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={errors.password && touched.password && \"error\"}\r\n              />\r\n              {errors.password && touched.password && (\r\n                <div className=\"input-feedback\">{errors.password}</div>\r\n              )}\r\n\r\n\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n\r\n                {isSubmitting ? \"Loading\" : \"Login\"}\r\n              </button>\r\n              <br /><br /><br />\r\n              {/*<Typography>\r\n              <Link href=\"#\">Forgot Password ?</Link>\r\n              </Typography>*/}\r\n              <br />\r\n\r\n              <Typography> For New Seller Registration ?\r\n              <Link href=\"#\" onClick={Formik.handleChange}> Sign Up </Link>\r\n              </Typography>\r\n              \r\n            </form>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br> \r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        \r\n       \r\n        \r\n\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n         <br></br> \r\n        <br></br>\r\n        <br></br>\r\n       <br></br>     \r\n        </div>\r\n       \r\n      );\r\n    }}\r\n  </Formik>\r\n  \r\n  \r\n  }\r\n\r\nexport default ValidatedLoginForm;","G:\\TU_S3\\src\\App.js",["93"],"\r\nimport React from 'react';\r\nimport Header from './Components/Header';\r\nimport Content from './Components/Content';\r\nimport Footer from './Components/Footer';\r\nimport Gallery from './Components/Gallery';\r\nimport {Route, Switch, Link, BrowserRouter} from \"react-router-dom\";\r\nimport Buyer from './Components/BuyerInfo';\r\nimport Plans from './Components/Plans';\r\nimport ValidatedLoginForm from './Components/ValidatedLoginForm';\r\nimport SellerDashboard from './Components/SellerDashboard';\r\nimport ViewSellerOrders from './Components/ViewSellerOrders';\r\nimport SignUp from './Components/Sign_Up';\r\nimport AddPlan from './Components/AddPlan';\r\nfunction App() {\r\n  return (\r\n\r\n     <React.Fragment>\r\n       <BrowserRouter>\r\n        <div> \r\n          <Header/>\r\n            \r\n              <Switch>\r\n                   <Route exact path=\"/\" component={Content}/>\r\n                   <Route exact path='/gallery' component={Gallery}/>\r\n                   <Route path=\"/buyerinfo\" component={Buyer}/>\r\n                   <Route path=\"/plans\" component={Plans}/>\r\n                   <Route path=\"/sellerlogin\" component={ValidatedLoginForm}/>\r\n                   <Route path=\"/sellerdashboard\" component={SellerDashboard}/>\r\n                   <Route path=\"/viewsellerorders\" component={ViewSellerOrders}/>\r\n                   <Route path=\"/signup\" component={SignUp}/>\r\n                   <Route path=\"/addplan\" component={AddPlan}/>\r\n                   \r\n\r\n              </Switch>\r\n          <Footer/>\r\n        </div>\r\n       </BrowserRouter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["94","95"],"G:\\TU_S3\\src\\Components\\Plans.js",["96","97","98","99","100","101"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from \"./Card.js\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n//import logo from \"./../logo.svg\"\r\n// const arr = [{ key: ['WEEKLY','MONTHLY','YEARLY']}] \r\n// let weekly = arr.filter(item => item.key.includes('WEEKLY'));\r\n// let monthly = arr.filter(item => item.key.includes('MONTHLY'));\r\n// let yearly = arr.filter(item => item.key.includes('YEARLY'));\r\n// const mainWeeklyList=[\r\n//     {\r\n//         \"planTypes\" : ['WEEKLY'],\r\n//         \"name\":\"Week1\",\r\n//         \"description\":\"5 conatiners including veg curries + 14 chappatis + 1 large pulao rice or steam rice + dessert + pickle + chutney \",\r\n//         \"averagePricePerPerson\":200,  \r\n//         \"imageURL\":require(\"./../logo.svg\")     ,\r\n        \r\n//     },\r\n//     {\r\n//         \"planTypes\" : ['WEEKLY'],\r\n//         \"name\":\"Week2\",\r\n//         \"description\":\"5 conatiners including veg curries + 7 chappatis + 1 large pulao rice or steam rice + dal + dessert + pickle + chutneyshfdfdjfh dewkfhew\",\r\n//         \"averagePricePerPerson\":200,     \r\n//         \"imageURL\":require(\"./../logo.svg\")      \r\n//     },\r\n// ]\r\n\r\n// const mainMonthlyList=[\r\n//     {\r\n//         \"planTypes\" : ['MONTHLY'],\r\n//         \"name\":\"Month1\",\r\n//         \"description\":\"this is the month 1 list providing the details of gujarati dish \",\r\n//         \"averagePricePerPerson\":500,  \r\n//         \"imageURL\":require(\"./../logo.svg\")     \r\n//     },\r\n//     {\r\n//         \"planTypes\" : ['MONTHLY'],\r\n//         \"name\":\"Month 2\",\r\n//         \"description\":\"we will provide you some punjabi dishes\",\r\n//         \"averagePricePerPerson\":600,     \r\n//         \"imageURL\":require(\"./../logo.svg\")      \r\n//     },\r\n   \r\n// ]\r\n\r\n// const mainOnceList=[\r\n//     {\r\n//         \"planTypes\" : ['YEARLY'],\r\n//         \"name\":\"combo1\",\r\n//         \"description\":\"providing the details of gujarati dish \",\r\n//         \"averagePricePerPerson\":100,  \r\n//         \"imageURL\":require(\"./../logo.svg\")     \r\n//     },\r\n//     {\r\n//         \"planTypes\" : ['YEARLY'],\r\n//         \"name\":\"combo2\",\r\n//         \"description\":\"we will provide you some punjabi dishes\",\r\n//         \"averagePricePerPerson\":100,     \r\n//         \"imageURL\":require(\"./../logo.svg\")      \r\n//     },\r\n// ]\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function FullWidthTabs(props) {\r\n  \r\n  const[pageProps, setpageProps]=useState([props]);\r\n\r\n  useEffect(()=>{\r\n        setpageProps(JSON.parse(window.localStorage.getItem('pageProps')));\r\n  },[]);\r\n  \r\n  \r\n  useEffect(()=>{\r\n   window.localStorage.setItem('props',pageProps);\r\n  },[pageProps]);\r\n\r\n  //console.log(props.location.data)\r\n  const idofseller = props.location.data\r\n  //console.log(idofseller.seller_id)\r\n  const idtest =idofseller.seller_id\r\n  const seller_name = idofseller.seller_name\r\n  const sellerimage = idofseller.sellerimage\r\n\r\n  //console.log(idofseller.seller_name)\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\nconst [plan, setPlan]= useState([]);\r\n  \r\n  useEffect(()=>{\r\n     let fetchData = async()=> {\r\n        \r\n        const request = await axios.get('https://tiffin-umbrella.herokuapp.com/get_plans?id='+idtest)\r\n        .then(res => {\r\n          console.log(\"response==>\",res)\r\n          setPlan(res.data)\r\n          // const persons = res.data;\r\n          // this.setState({ persons });\r\n        })\r\n        //console.log(request.data.sellers);\r\n        // setSeller(request.data.sellers);\r\n        // return request;\r\n      }\r\n     \r\n      fetchData();\r\n             \r\n  },[]);\r\n\r\n  \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Weekly\" {...a11yProps(0)} />\r\n          <Tab label=\"Monthly\" {...a11yProps(1)} />\r\n          <Tab label=\"Daily\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n   \r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n        <Grid container spacing={2}>\r\n          {plan.map((item,index)=>{\r\n          \r\n         return(\r\n           <>\r\n              {item.type == \"WEEKLY\" && \r\n              <Grid item xs={12} md={4} lg={4} sm={4}>\r\n          {console.log(\"iotem===>\",item)}\r\n          <Card\r\n              data={item} sellerid={idtest} sellername={seller_name} sellerimg={sellerimage} planid={item.id}/>\r\n      </Grid>}\r\n           </>  \r\n            )\r\n          }\r\n       \r\n          )}\r\n          </Grid>\r\n          \r\n            {/* <Grid container spacing={2}>\r\n                {mainWeeklyList && mainWeeklyList.map((item,index)=>{\r\n                    return(\r\n                        <Grid item xs={12} md={4} lg={4} sm={4}>\r\n                            {console.log(\"iotem===>\",item)}\r\n                        <Card\r\n                        data={item}/>\r\n                        </Grid>\r\n                    )\r\n                })} */}\r\n    \r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n        <Grid container spacing={2}>\r\n          {plan.map((item,index)=>{\r\n          \r\n         return(\r\n           <>\r\n              {item.type == \"MONTHLY\" && \r\n              <Grid item xs={12} md={4} lg={4} sm={4}>\r\n          {console.log(\"iotem===>\",item)}\r\n          <Card\r\n             data={item} sellerid={idtest} sellername={seller_name} sellerimg={sellerimage} planid={item.id}/>\r\n      </Grid>}\r\n           </>  \r\n            )\r\n          }\r\n       \r\n          )}\r\n          </Grid>\r\n        {/* <Grid container spacing={2}> */}\r\n                {/* {mainMonthlyList && mainMonthlyList.map((item,index)=>{\r\n                    return(\r\n                        <Grid item xs={12} md={4} lg={4} sm={4}>\r\n                            {console.log(\"iotem===>\",item)}\r\n                        <Card\r\n                        data={item}/>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid> */}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n        <Grid container spacing={2}>\r\n          {plan.map((item,index)=>{\r\n          \r\n         return(\r\n           <>\r\n              {item.type == \"ONCE\" && \r\n              <Grid item xs={12} md={4} lg={4} sm={4}>\r\n          {console.log(\"iotem===>\",item)}\r\n          <Card\r\n              data={item} sellerid={idtest} sellername={seller_name} sellerimg={sellerimage} planid={item.id}/>\r\n      </Grid>}\r\n           </>  \r\n            )\r\n          }\r\n       \r\n          )}\r\n          </Grid>\r\n        </TabPanel>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","G:\\TU_S3\\src\\Components\\SellerDashboard.js",[],["102","103"],"G:\\TU_S3\\src\\Components\\Gallery.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React ,{useEffect, useState} from 'react';\r\nimport './style.css';\r\n\r\n\r\nfunction Gallery({url}) {\r\n   function handleImage(){\r\n      const data = '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'\r\n      return data;\r\n    }\r\n\r\n      return (\r\n         \r\n      <div>\r\n         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js\"></script>\r\n         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js\"></script>\r\n         <div className=\"responsive\">\r\n         <div className=\"gallery\">\r\n       <a target=\"_blank\" ><img src=\" https://i.ibb.co/k1x404S/chinese-img1.jpg\" width=\"600\" height=\"400\"></img></a>\r\n   \r\n</div>\r\n</div>\r\n\r\n\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src=\"https://i.ibb.co/n0YhBPf/chinese-img2.jpg\"  width=\"600\" height=\"400\"></img></a>\r\n   \r\n</div>\r\n</div>\r\n\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\">\r\n      <img src=\" https://i.ibb.co/rf6fjrW/chinese-img3.jpg\"  width=\"600\" height=\"400\"></img>\r\n   </a>\r\n   \r\n</div>\r\n</div>\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src=\"https://i.ibb.co/QXtLcXk/chinese-img4.jpg\"  width=\"600\" height=\"400\"></img></a>\r\n   \r\n</div>\r\n</div>\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src=\"https://i.ibb.co/5YYVsLR/chinese-img5.jpg\"  width=\"600\" height=\"400\"></img></a>\r\n   \r\n</div>\r\n</div>\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src=\"https://i.ibb.co/qjfWZxR/chinese-img6.jpg\"  width=\"600\" height=\"400\"></img></a>\r\n   \r\n</div>\r\n</div>\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src=\"https://i.ibb.co/grs54Xg/chinese-img7.jpg\"  width=\"600\" height=\"400\"></img></a>\r\n      </div>\r\n</div>\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src=\"https://i.ibb.co/PMqMDWg/chinese-img8.jpg\"  width=\"600\" height=\"400\"></img></a>\r\n   \r\n</div>\r\n</div>\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src=\" https://i.ibb.co/X2Xf8LR/chinese-img10.jpg\"  width=\"600\" height=\"400\"></img></a>\r\n      </div>\r\n</div>\r\n\r\n\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\">\r\n      <img src=\"https://i.ibb.co/wByZNr3/chinese-img9.jpg\"  width=\"600\" height=\"400\"></img>\r\n   </a>\r\n   \r\n</div>\r\n</div>\r\n<div className=\"responsive\">\r\n<div className=\"gallery\">\r\n   <a target=\"_blank\"><img src={`data:image/jpg;base64,${handleImage}`} alt=\"\"/>  </a>\r\n      </div>\r\n</div>\r\n\r\n<div className=\"clearfix\"></div>\r\n\r\n\r\n   </div>\r\n   );\r\n}\r\n\r\nexport default Gallery;","G:\\TU_S3\\src\\Components\\Card.js",["127","128","129","130","131","132","133","134","135"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport \"./Card.css\"\r\nimport {Route, Switch, Link, BrowserRouter} from \"react-router-dom\";\r\nimport { flexbox } from '@material-ui/system';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n\r\n    },\r\n    secondaryCardButton: {\r\n        margin: '0 auto',\r\n        // display: \"flex\",\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const sellerid =props.sellerid\r\n    const sellername = props.sellername\r\n    const imageOfSeller = props.sellerimg;\r\n    const planid = props.planid;\r\n    const plantype = props.data.type;\r\n    //console.log(props.sellerid)\r\n    //console.log(props.sellername)\r\n\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    console.log(\"this.props===>\", props.data)\r\n    return (\r\n\r\n        \r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                title={props.data.name}\r\n                // subheader=\"September 14, 2016 ----> September 15, 2016\"\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                // image={props.data.imageURL}\r\n                image={props.data.imageUrl}\r\n                title=\"Weekly Plan\"\r\n\r\n            />\r\n            {console.log(\"props==>\", props.data)}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {/* className={\"Description-text\"} */}\r\n                    <h2>{props.data.description}</h2>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                <h3>${props.data.price}</h3>\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    className=\"btnstyle\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => openLinkInNewTab(props.data.modelUrl)}>\r\n                    3D\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                <Link to={{\r\n                        pathname: \"/buyerinfo\",\r\n                        data: { seller_id: sellerid, seller_name: sellername, sellerphoto:imageOfSeller, description: props.data.description, planname: props.data.name, planprice:props.data.price, planid: planid, plantype: plantype}\r\n                      }} style={{color: \"beige\", textDecoration: 'none'}}>Subscribe Now</Link>\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n        \r\n    );\r\n}\r\n\r\n\r\nfunction openLinkInNewTab(linkToBeOpened) {\r\n    if (!linkToBeOpened) {/* if linkToBeOpened is invalid */\r\n        linkToBeOpened = \"https://3dviewer.net/embed.html#model=https://alphasingh.github.io/assets/obj/chair_lite.obj\";\r\n    }\r\n    return window.open(linkToBeOpened, \"_blank\");\r\n}",["136","137"],"G:\\TU_S3\\src\\Components\\ViewSellerOrders.js",["138"],"import * as React from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst columns = [\r\n  { field: \"id\", headerName: \"Order ID\", width: 350 },\r\n  {\r\n    field: \"firstname\",\r\n    headerName: \"First Name\",\r\n    width: 150,\r\n    editable: true\r\n  },\r\n  {\r\n    field: \"lastname\",\r\n    headerName: \"Last Name\",\r\n    width: 150,\r\n    editable: true\r\n  },\r\n  {\r\n    field: \"phone\",\r\n    headerName: \"Phone Number\",\r\n    type: \"number\",\r\n    width: 180,\r\n    editable: true\r\n  },\r\n  {\r\n    field: \"email\",\r\n    headerName: \"Email ID\",\r\n    width: 150,\r\n    editable: true\r\n  },\r\n  {\r\n    field: \"address\",\r\n    headerName: \"Addresss\",\r\n    width: 150,\r\n    editable: true\r\n  },\r\n  {\r\n    field: \"plan\",\r\n    headerName: \"Plan Ordered\",\r\n    width: 150,\r\n    editable: true\r\n  },\r\n  {\r\n    field: \"planprice\",\r\n    headerName: \"Plan Price\",\r\n    width: 150,\r\n    editable: true \r\n  }\r\n  // },\r\n  // {\r\n  //   field: 'fullName',\r\n  //   headerName: 'Full name',\r\n  //   description: 'This column has a value getter and is not sortable.',\r\n  //   sortable: false,\r\n  //   width: 160,\r\n  //   valueGetter: (params) =>\r\n  //     `${params.getValue(params.id, 'firstName') || ''} ${\r\n  //       params.getValue(params.id, 'lastName') || ''\r\n  //     }`,\r\n  // },\r\n];\r\nexport default function ViewSellerOrders(props) {\r\n\r\n  const [data, setData] = useState([]);\r\n  // const sellerid = window.localStorage.getItem(\"sellerid\");\r\n  console.log(\"Seller ID received\", props.location.id);\r\n  const [serialID, setSerialID] = useState(props.location.id);\r\n  const url = 'https://tiffin-umbrella.herokuapp.com/sellers/'+serialID+'/orders';\r\n\r\n  useEffect(() => {\r\n    let fetchData = async () => {\r\n\r\n      const response = await axios.get(url);\r\n      console.log(response.data);\r\n      setData(response.data);\r\n\r\n      return response;\r\n    }\r\n\r\n    fetchData();\r\n\r\n  }, [url]);\r\n  \r\n\r\n \r\n  return (\r\n    <div style={{ height: 800, width: \"100%\" }}>\r\n      <DataGrid\r\n        rows={data.map(dataelement=>({\r\n          id:dataelement.id, \r\n          firstname: dataelement.buyer.firstName,\r\n          lastname: dataelement.buyer.lastName,\r\n          phone: dataelement.buyer.contact.phone,\r\n          email: dataelement.buyer.contact.email,\r\n          address: JSON.stringify(dataelement.buyer.contact.address.line1 + dataelement.buyer.contact.address.line2 + dataelement.buyer.contact.address.city + dataelement.buyer.contact.address.zip),\r\n          plan: dataelement.plan.name,\r\n          planprice: dataelement.plan.price\r\n        }))}\r\n        columns={columns}\r\n        pageSize={12}\r\n        checkboxSelection\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","G:\\TU_S3\\src\\Components\\BuyerInfo.js",["139","140"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport './Buyer.css';\r\n\r\n\r\nexport default function App(props) {\r\n  const url = \"https://tiffin-umbrella.herokuapp.com/post_buyer\";\r\n  console.log(props.location.data)\r\n  const sellerinfo = props.location.data\r\n  // const seller_id = sellerinfo.seller_id\r\n  // const plan_id = sellerinfo.planid  \r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      address: '',\r\n      area: '',\r\n      zip: ''\r\n    },\r\n\r\n    onSubmit: (values, onSubmitProps, seller_id, plan_id) => {\r\n      console.log('Form data', values)\r\n      onSubmitProps.resetForm()\r\n      const postData = {\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        contact: {\r\n          phone: values.phone,\r\n          email: values.email,\r\n          address: {\r\n            line1: values.address,\r\n            area: values.area,\r\n            zip: values.zip\r\n          }\r\n        },\r\n        seller_id:sellerinfo.seller_id,\r\n        plan_id: sellerinfo.planid\r\n        \r\n      };\r\n\r\n      Axios.post(url, postData, { headers: { 'Content-Type': 'application/json' } })\r\n        .then(res => { if(res.status === 200) {console.log(\"Success\"); alert(\"Your Order is placed successfully, please check your email.\");\r\n        window.location.href = \"/\"; }})\r\n        .catch(errors => { console.log(errors) })\r\n\r\n    },\r\n\r\n    validate: values => {\r\n\r\n      let errors = {}\r\n\r\n      if (!values.firstName) {\r\n        errors.firstName = 'Required'\r\n      }\r\n\r\n      if (!values.lastName) {\r\n        errors.lastName = 'Required'\r\n      }\r\n\r\n      if (!values.email) {\r\n        errors.email = 'Email ID is required'\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Email ID is not valid'\r\n      }\r\n\r\n      if (!values.phone) {\r\n        errors.phone = 'Phone number is required'\r\n\r\n      } else if (!/([0-9])/.test(values.phone)) {\r\n        errors.phone = 'Only Numbers are allowed'\r\n      }\r\n\r\n      if (!values.address) {\r\n        errors.address = 'Address is Required'\r\n      }\r\n\r\n      if (!values.area) {\r\n        errors.area = 'Area name is Required'\r\n      }\r\n\r\n      if (!values.zip) {\r\n        errors.zip = 'Zip code is Required'\r\n      }\r\n      else if (/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(values.zip)) {\r\n        errors.zip = 'Zip code can only have Numbers and Letters'\r\n      }\r\n\r\n      return errors\r\n    }\r\n  })\r\n  \r\n  return (\r\n\r\n    <div>\r\n     \r\n      {/* <div className='p'>Here the Buyers order will be displayed!!</div> */}\r\n      {/* <div className='p' >\r\n         <div className=\"responsive\">\r\n         <div className=\"gallery\">\r\n       <a target=\"_blank\" ><img src=\" https://i.ibb.co/k1x404S/chinese-img1.jpg\" width=\"600\" height=\"400\"></img></a>\r\n   \r\n         </div>\r\n       </div>\r\n    </div> */}\r\n\r\n    <br></br><br></br>\r\n\r\n      <div className='p'>\r\n        <h2>Order Summary</h2>\r\n        \r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-mt-4 w\" >\r\n              <div className=\"card mt-4\">\r\n\r\n                <img className=\"card-img-top\" src={sellerinfo.sellerphoto} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"card-title text-secondary\">{sellerinfo.seller_name}</h3>\r\n                  <p className=\"card-text text-secondary\"><h5><strong>Plan Name :</strong> {sellerinfo.planname}</h5></p>\r\n                  <p className=\"card-text text-secondary\"><h5><strong>Plan Type :</strong> {sellerinfo.plantype}</h5></p>\r\n                  <p className=\"card-text text-secondary\"><h5><strong>Plan Description :</strong> {sellerinfo.description}</h5></p>\r\n                  <p className=\"card-text text-secondary\" ><h5><strong>Plan Price :</strong> ${sellerinfo.planprice}</h5></p>\r\n                  {/* <p className=\"card-text text-secondary\" type=\"hidden\" value={sellerinfo.id}></p> */}\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"inner\">\r\n\r\n        <h2 className='heading' >Buyer Details Form</h2>\r\n\r\n        <div className=\"form-group\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='First Name'\r\n                type='text'\r\n                name='firstName'\r\n                id='firstName'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.firstName}\r\n              />\r\n              {formik.touched.firstName && formik.errors.firstName ? <div className='error'>{formik.errors.firstName}</div> : null}\r\n            </div>\r\n\r\n            <div >\r\n              <label > </label>\r\n              <input className=\"cinput\"\r\n                placeholder='Last Name'\r\n                type='text'\r\n                name='lastName'\r\n                id='lastName'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.lastName}\r\n              />\r\n              {formik.touched.lastName && formik.errors.lastName ? <div className='error'>{formik.errors.lastName}</div> : null}\r\n            </div>\r\n\r\n            <div >\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Email'\r\n                type='email'\r\n                name='email'\r\n                id='email'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.email}\r\n              />\r\n              {formik.touched.email && formik.errors.email ? <div className='error'>{formik.errors.email}</div> : null}\r\n            </div>\r\n\r\n            <div>\r\n              <label ></label>\r\n\r\n              <input className=\"cinput\"\r\n                placeholder='Phone'\r\n                type='text'\r\n                name='phone'\r\n                id='phone'\r\n                maxLength=\"10\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.phone}\r\n              />\r\n              {formik.touched.phone && formik.errors.phone ? <div className='error'>{formik.errors.phone}</div> : null}\r\n            </div>\r\n\r\n            <div>\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Address'\r\n                type='textarea'\r\n                name='address'\r\n                id='address'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.address}\r\n              />\r\n              {formik.touched.address && formik.errors.address ? <div className='error'>{formik.errors.address}</div> : null}\r\n            </div>\r\n\r\n            <div>\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Area'\r\n                type='text'\r\n                name='area'\r\n                id='area'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.area}\r\n              />\r\n              {formik.touched.area && formik.errors.area ? <div className='error'>{formik.errors.area}</div> : null}\r\n            </div>\r\n\r\n            <div>\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Zipcode'\r\n                type='tel'\r\n                name='zip'\r\n                id='zip'\r\n                pattern=\"[A-Z0-9]{6}\"\r\n                maxLength=\"6\"\r\n                minLength=\"5\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.zip}\r\n              />\r\n              {formik.touched.zip && formik.errors.zip ? <div className='error'>{formik.errors.zip}</div> : null}\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div className=\"centerblock\">\r\n\r\n\r\n              Note: All fields are mandatory to fill\r\n\r\n            <br />\r\n              <br />\r\n\r\n              <button type='submit' disabled={!formik.isValid}>Submit</button>\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n         <br></br> \r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n\r\n     \r\n    </div>\r\n\r\n  );\r\n\r\n}","G:\\TU_S3\\src\\Components\\Sign_Up.js",["141","142","143","144"],"import React,{useState,useEffect,Component} from 'react';\r\nimport Axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport './Sign_Up.css';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function SignUp(props) {\r\n  const url = \" https://tiffin-umbrella.herokuapp.com/post_seller\";\r\n  const[history, setHistory] = useState(useHistory());\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      // lastName: '',\r\n      phone: '',\r\n      email: '',\r\n      password: '',\r\n      confirm_password: '',\r\n      plan:[]\r\n     // file: ''\r\n    },\r\n\r\n    onSubmit: (values, onSubmitProps) => {\r\n      console.log('Form data', values)\r\n      onSubmitProps.resetForm()\r\n      const postData = {\r\n        name: values.firstName,\r\n        plans: values.plan,\r\n        \r\n        contact: {\r\n          email: values.email,\r\n          phone: values.phone,\r\n       \r\n        },\r\n        password: values.password,\r\n      };\r\n\r\n      Axios.post(url, postData)\r\n        .then(res => { if(res.status===200){\r\n          console.log(\"sucess\");\r\n          history.push({\r\n            pathname: \"/sellerlogin\"\r\n           });\r\n        }\r\n          else if(res.status === 400){\r\n              alert(\"User already exists!\");\r\n          }\r\n          else{\r\n            alert(\"Something Went Wrong!\");\r\n          }\r\n        } )\r\n        .catch(errors => { console.log(errors) })\r\n\r\n    },\r\n\r\n    validate: values => {\r\n\r\n      let errors = {}\r\n      if (!values.firstName) {\r\n          errors.firstName = 'Required'\r\n      }\r\n\r\n      // if (!values.lastName) {\r\n      //   errors.lastName = 'Required'\r\n      // }\r\n\r\n      if (!values.email) {\r\n        errors.email = 'Required'\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid'\r\n      }\r\n\r\n\r\n      if (!values.phone) {\r\n        errors.phone = 'Required'\r\n\r\n      } else if (!/([0-9])/.test(values.phone)) {\r\n        errors.phone = 'Invalid'\r\n      }\r\n      \r\n\r\n      if (!values.password) {\r\n        errors.password = 'Required'\r\n      }\r\n\r\n      if (!values.confirm_password) {\r\n        console.log('....', values.password)\r\n\r\n        errors.confirm_password = 'Required'\r\n      } else if (values.password != values.confirm_password){\r\n        console.log('....', values.password)\r\n        errors.password = \"password don't match\"\r\n      }\r\n\r\n      if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/.test(values.password)) {\r\n        errors.password = 'Passowrd policy break. Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character '\r\n      }\r\n      \r\n\r\n\r\n      // if (!values.zip) {\r\n      //   errors.zip = 'Required'\r\n      // }\r\n      // else if (/([a-z])/.test(values.zip)) {\r\n      //   errors.zip = 'Invalid'\r\n      // }\r\n\r\n      return errors\r\n    }\r\n  })\r\n\r\n  return (\r\n\r\n    <div>\r\n      <hr />\r\n  {/* <div className='p'></div> */}\r\n  \r\n\r\n\r\n      <div className=\"inner\">\r\n\r\n        <h2 className='heading' >Sign-Up</h2>\r\n\r\n        <div className=\"form-group\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Name'\r\n                type='text'\r\n                name='firstName'\r\n                id='firstName'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.firstName}\r\n              />\r\n              {formik.touched.firstName && formik.errors.firstName ? <div className='error'>{formik.errors.firstName}</div> : null}\r\n            </div>\r\n\r\n            {/* <div >\r\n              <label > </label>\r\n              <input className=\"cinput\"\r\n                placeholder='Last Name *'\r\n                type='text'\r\n                name='lastName'\r\n                id='lastName'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.lastName}\r\n              />\r\n              {formik.touched.lastName && formik.errors.lastName ? <div className='error'>{formik.errors.lastName}</div> : null}\r\n            </div> */}\r\n\r\n            <div >\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Email'\r\n                type='email'\r\n                name='email'\r\n                id='email'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.email}\r\n              />\r\n              {formik.touched.email && formik.errors.email ? <div className='error'>{formik.errors.email}</div> : null}\r\n            </div>\r\n\r\n            <div>\r\n              <label ></label>\r\n\r\n              <input className=\"cinput\"\r\n                placeholder='Phone'\r\n                type='text'\r\n                name='phone'\r\n                id='phone'\r\n                maxLength=\"10\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.phone}\r\n              />\r\n              {formik.touched.phone && formik.errors.phone ? <div className='error'>{formik.errors.phone}</div> : null}\r\n            </div>\r\n\r\n            <div>\r\n            <label></label>\r\n            <input className=\"cinput\"\r\n              type=\"password\" \r\n              name=\"password\" \r\n              value={formik.values.password}\r\n              // value={this.state.input.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              // class=\"form-control\" \r\n              placeholder=\"Password\" \r\n              id=\"password\" />\r\n              {formik.touched.password && formik.errors.password ? <div className='error'>{formik.errors.password}</div> : null}\r\n              {/* <div className=\"text-danger\">{this.state.errors.password}</div> */}\r\n          </div>\r\n  \r\n          <div>\r\n            <label></label>\r\n            <input className=\"cinput\"\r\n              type=\"password\" \r\n              name=\"confirm_password\" \r\n              value={formik.values.confirm_password}\r\n              // value={this.state.input.confirm_password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              // class=\"form-control\" \r\n              placeholder=\"Confirm Password\" \r\n              id=\"confirm_password\" />\r\n              {formik.touched.confirm_password && formik.errors.confirm_password ? <div className='error'>{formik.errors.confirm_password}</div> : null}\r\n              {/* <div className=\"text-danger\">{this.state.errors.confirm_password}</div> */}\r\n          </div>\r\n          <br></br>\r\n\r\n            <input type=\"file\" onChange={event => {formik.values.file = event.target.files[0]} }  />\r\n            <div className=\"centerblock\">\r\n\r\n              {/* <input type=\"checkbox\" id=\"checkbox\" className=\"check\" />&nbsp;\r\n                I hereby agree to share my details with the seller */}\r\n              Note: All fields are mandatory to fill\r\n\r\n            <br />\r\n              <br />\r\n\r\n              <button type='submit' disabled={!formik.isValid}>\r\n                {/* <Link to='/ValidatedLoginForm'> */}\r\n                  Sign Up\r\n                  {/* </Link> */}\r\n                  </button>\r\n              \r\n              \r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    <hr />\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n","G:\\TU_S3\\src\\Components\\CustomSelect.js",["145"],"import React from 'react';\r\nimport Select from 'react-select';\r\n// import {default as Select} from 'react-select'\r\nconst options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n  ];\r\n\r\nexport default function CustomSelect ({onChange,options, value, className }) {\r\n\r\n    const defaultValue = (options,value) => {\r\n        console.log(\"value==>\",value)\r\n        console.log(\"options==>\",options)\r\n        return options ? options.find(option=>option.value === value):\"\"\r\n    }\r\n\r\n    return(\r\n        <div className={className}>\r\n               <Select\r\n                    value={defaultValue(options,value)}\r\n                    onChange={value=>{onChange(value)}} \r\n                    options = {options}>            \r\n                </Select>\r\n        </div>\r\n    )\r\n}","G:\\TU_S3\\src\\Components\\AddPlan.js",["146","147","148"],"import React,{useState,useEffect,Component} from 'react';\r\nimport Axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport { useField } from 'formik';\r\nimport './AddPlan.css';\r\nimport CustomSelect from './CustomSelect';\r\nimport FormData from 'form-data';\r\n\r\nconst options =[\r\n  {value:'WEEKLY', label: 'WEEKLY'},\r\n  {value:'MONTHLY', label: 'MONTHLY'},\r\n  {value:'ONCE', label: 'DAILY'}\r\n]\r\n\r\nexport default function App(props) {\r\n\r\n  const[imageUrl, setImageUrl]= useState();\r\n  const[modelUrl, setModelUrl] = useState();\r\n  const url = \" https://tiffin-umbrella.herokuapp.com/sellers/60db667a8247d42edb05cbae/plans\";\r\n\r\n\r\n  const handleImage = async (e) => {\r\n    var image = new FormData();\r\n    var imagefile =  e.target.files[0];\r\n    var comment = \"This is a Image comment\";\r\n   image.append(\"image\", imagefile);\r\n    await Axios.post(\"https://tiffin-umbrella.herokuapp.com/images?comment=\"+comment, image,  { headers: { 'Content-Type': 'multipart/form-data' }}) //'Authorization':'Client-ID 2f7124444928e3e'\r\n    .then(res => { if(res.status === 200){\r\n      console.log(\"Received Image url\", res.data.url);\r\n      setImageUrl(res.data.url);\r\n    }\r\n    })}\r\n\r\n    const handleModel = async (e) => {\r\n      var image = new FormData();\r\n      var imagefile =  e.target.files[0];\r\n      var comment = \"This is a Model comment\";\r\n     image.append(\"image\", imagefile);\r\n      await Axios.post(\"https://tiffin-umbrella.herokuapp.com/images?comment=\"+comment, image,  { headers: { 'Content-Type': 'multipart/form-data' }}) //'Authorization':'Client-ID 2f7124444928e3e'\r\n      .then(res => { if(res.status === 200){\r\n        console.log(\"Received Model url\", res.data.url);\r\n        setModelUrl(res.data.url);\r\n      }\r\n      })}\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      planType: '',\r\n      planName: '',\r\n      planDescription: '',\r\n      planPrice: '',\r\n      imageUrl: imageUrl,\r\n      modelUrl: modelUrl\r\n      // file: ''\r\n    },\r\n\r\n    onSubmit: (values, onSubmitProps) => {\r\n      console.log('Form data', values)\r\n      console.log('Image URL', imageUrl)\r\n      const image_api_url= imageUrl\r\n      const model_api_url= modelUrl\r\n      console.log('Model URL', modelUrl)\r\n      onSubmitProps.resetForm()\r\n      const postData = {\r\n        name: values.planName,\r\n        description: values.planDescription,\r\n        price: values.planPrice,\r\n        type: values.planType,\r\n        imageUrl: image_api_url,\r\n        modelUrl: model_api_url\r\n      };\r\n\r\n      Axios.post(url, postData,  { headers: { 'Content-Type': 'application/json' }}) \r\n        .then(res => { if(res.status === 200){\r\n          console.log(\"Success!!\")\r\n        }console.log(res.values) })\r\n        .catch(errors => { console.log(errors) })\r\n\r\n    },\r\n   \r\n    validate: values => {\r\n\r\n      let errors = {}\r\n      if (!values.planType) {\r\n          errors.planType = 'Required'\r\n      }\r\n\r\n      if (!values.planName) {\r\n        errors.planName = 'Required'\r\n    }\r\n\r\n      if (!values.planDescription) {\r\n          errors.planDescription = 'Required'\r\n      }\r\n\r\n      if (!values.planPrice) {\r\n        errors.planPrice = 'Required'\r\n      }\r\n      else if (!/([0-9])/.test(values.planPrice)) {\r\n        errors.planPrice = 'Invalid'}\r\n\r\n      // if (!values.file) {\r\n      //   errors.file = 'Required'\r\n      // }\r\n\r\n      return errors\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n\r\n    <div>\r\n      <hr />\r\n  {/* <div className='p'></div> */}\r\n  \r\n\r\n\r\n      <div className=\"inner\">\r\n\r\n        <h2 className='heading'>Add Plan</h2>\r\n\r\n        <div className=\"form-group\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div>    \r\n            <label></label>            \r\n            <CustomSelect\r\n               \r\n              onChange={value=>formik.setFieldValue('planType',value.value)}\r\n              options = {options}\r\n              value = {formik.values.planType}\r\n              className = 'input' \r\n             \r\n            />\r\n            {formik.touched.planType && formik.errors.planType ? <div className='error'>{formik.errors.planType}</div> : null}\r\n            </div>\r\n          &nbsp;\r\n            <div>\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Plan Name'\r\n                type='text'\r\n                name='planName'\r\n                id='planName'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.planName}\r\n              />\r\n              {formik.touched.planName && formik.errors.planName ? <div className='error'>{formik.errors.planName}</div> : null}\r\n            </div>\r\n\r\n            <div >\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Plan Description'\r\n                type='text'\r\n                name='planDescription'\r\n                id='planDescription'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.planDescription}\r\n              />\r\n              {formik.touched.planDescription && formik.errors.planDescription ? <div className='error'>{formik.errors.planDescription}</div> : null}\r\n            </div>\r\n\r\n            <div>\r\n              <label ></label>\r\n\r\n              <input className=\"cinput\"\r\n                placeholder='Price'\r\n                type='tel'\r\n                maxLength = \"3\"\r\n                name='planPrice'\r\n                id='planPrice'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.planPrice}\r\n              />\r\n              {formik.touched.planPrice && formik.errors.planPrice ? <div className='error'>{formik.errors.planPrice}</div> : null}\r\n            </div>\r\n\r\n            \r\n           \r\n          <br></br>\r\n\r\n          {/* <input\r\n              label=\"Light Icon:\"\r\n              type=\"image\"\r\n              name=\"lightIcon\"\r\n              accept=\"image/x-png\"\r\n              onBlur\r\n              onChange={event => {formik.values.dishImage = event.target.files[0]\r\n                // setFieldValue('lightIcon', e.target.files[0]);\r\n            }}\r\n          /> */}\r\n           {/* <div>\r\n              <label ></label>\r\n              <input className=\"cinput\"\r\n                placeholder='Image URL'\r\n                type='text'\r\n                name='imageUrl'\r\n                id='imageUrl'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.imageUrl}\r\n              />\r\n              {formik.touched.imageUrl && formik.errors.imageUrl ? <div className='error'>{formik.errors.imageUrl}</div> : null}\r\n            </div> */}\r\n\r\n            \r\n         <label >Choose Plan Image:</label>\r\n          <input id=\"file\" name=\"file\" type=\"file\" accept=\"image/*\" value={formik.values.imageUrl} onChange={handleImage}/>\r\n\r\n          <label >Choose Model(AR) Image:</label>\r\n          <input id=\"file\" name=\"model\" type=\"file\" accept=\"image/*\" value={formik.values.modelUrl} onChange={handleModel}/>\r\n          <br></br>\r\n            {/* <input type=\"file\" onChange={event => {formik.values.file = event.target.files[0]} } /> onChange={props.handleFileUpload}*/}\r\n            <div className=\"centerblock\">\r\n\r\n              {/* <input type=\"checkbox\" id=\"checkbox\" className=\"check\" />&nbsp;\r\n                I hereby agree to share my details with the seller */}\r\n              Note: All fields are mandatory to fill\r\n\r\n            <br />\r\n            \r\n\r\n              <button type='submit' disabled={!formik.isValid}>\r\n                {/* <Link to='/ValidatedLoginForm'> */}\r\n                  Add Plan\r\n                  {/* </Link> */}\r\n                  </button>\r\n              \r\n              \r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    <hr />\r\n    </div>\r\n</>\r\n  );\r\n\r\n}\r\n\r\n","G:\\TU_S3\\src\\Components\\Footer.js",[],["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":15},{"ruleId":"155","severity":1,"message":"159","line":8,"column":10,"nodeType":"157","messageId":"158","endLine":8,"endColumn":32},{"ruleId":"155","severity":1,"message":"160","line":9,"column":10,"nodeType":"157","messageId":"158","endLine":9,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":111,"column":13,"nodeType":"163","messageId":"164","endLine":111,"endColumn":15},{"ruleId":"151","replacedBy":"165"},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","severity":1,"message":"167","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":24},{"ruleId":"155","severity":1,"message":"168","line":10,"column":10,"nodeType":"157","messageId":"158","endLine":10,"endColumn":18},{"ruleId":"155","severity":1,"message":"169","line":15,"column":12,"nodeType":"157","messageId":"158","endLine":15,"endColumn":20},{"ruleId":"155","severity":1,"message":"170","line":15,"column":22,"nodeType":"157","messageId":"158","endLine":15,"endColumn":33},{"ruleId":"155","severity":1,"message":"171","line":16,"column":21,"nodeType":"157","messageId":"158","endLine":16,"endColumn":31},{"ruleId":"161","severity":1,"message":"172","line":37,"column":38,"nodeType":"163","messageId":"164","endLine":37,"endColumn":40},{"ruleId":"155","severity":1,"message":"173","line":7,"column":24,"nodeType":"157","messageId":"158","endLine":7,"endColumn":28},{"ruleId":"151","replacedBy":"174"},{"ruleId":"153","replacedBy":"175"},{"ruleId":"155","severity":1,"message":"176","line":139,"column":9,"nodeType":"157","messageId":"158","endLine":139,"endColumn":26},{"ruleId":"155","severity":1,"message":"177","line":148,"column":15,"nodeType":"157","messageId":"158","endLine":148,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":162,"column":5,"nodeType":"180","endLine":162,"endColumn":7,"suggestions":"181"},{"ruleId":"161","severity":1,"message":"162","line":189,"column":26,"nodeType":"163","messageId":"164","endLine":189,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":221,"column":26,"nodeType":"163","messageId":"164","endLine":221,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":252,"column":26,"nodeType":"163","messageId":"164","endLine":252,"endColumn":28},{"ruleId":"151","replacedBy":"182"},{"ruleId":"153","replacedBy":"183"},{"ruleId":"155","severity":1,"message":"184","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"185","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":35},{"ruleId":"186","severity":1,"message":"187","line":18,"column":8,"nodeType":"188","endLine":18,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":18,"column":28,"nodeType":"188","endLine":18,"endColumn":107},{"ruleId":"186","severity":1,"message":"187","line":26,"column":4,"nodeType":"188","endLine":26,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":26,"column":23,"nodeType":"188","endLine":26,"endColumn":102},{"ruleId":"186","severity":1,"message":"187","line":33,"column":4,"nodeType":"188","endLine":33,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":34,"column":7,"nodeType":"188","endLine":34,"endColumn":87},{"ruleId":"186","severity":1,"message":"187","line":41,"column":4,"nodeType":"188","endLine":41,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":41,"column":23,"nodeType":"188","endLine":41,"endColumn":102},{"ruleId":"186","severity":1,"message":"187","line":47,"column":4,"nodeType":"188","endLine":47,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":47,"column":23,"nodeType":"188","endLine":47,"endColumn":102},{"ruleId":"186","severity":1,"message":"187","line":53,"column":4,"nodeType":"188","endLine":53,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":53,"column":23,"nodeType":"188","endLine":53,"endColumn":102},{"ruleId":"186","severity":1,"message":"187","line":59,"column":4,"nodeType":"188","endLine":59,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":59,"column":23,"nodeType":"188","endLine":59,"endColumn":102},{"ruleId":"186","severity":1,"message":"187","line":64,"column":4,"nodeType":"188","endLine":64,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":64,"column":23,"nodeType":"188","endLine":64,"endColumn":102},{"ruleId":"186","severity":1,"message":"187","line":70,"column":4,"nodeType":"188","endLine":70,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":70,"column":23,"nodeType":"188","endLine":70,"endColumn":104},{"ruleId":"186","severity":1,"message":"187","line":77,"column":4,"nodeType":"188","endLine":77,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":78,"column":7,"nodeType":"188","endLine":78,"endColumn":86},{"ruleId":"186","severity":1,"message":"187","line":85,"column":4,"nodeType":"188","endLine":85,"endColumn":23},{"ruleId":"155","severity":1,"message":"191","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":12},{"ruleId":"155","severity":1,"message":"192","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":16},{"ruleId":"155","severity":1,"message":"193","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":14},{"ruleId":"155","severity":1,"message":"194","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":16,"column":9,"nodeType":"157","messageId":"158","endLine":16,"endColumn":14},{"ruleId":"155","severity":1,"message":"195","line":16,"column":16,"nodeType":"157","messageId":"158","endLine":16,"endColumn":22},{"ruleId":"155","severity":1,"message":"196","line":16,"column":30,"nodeType":"157","messageId":"158","endLine":16,"endColumn":43},{"ruleId":"155","severity":1,"message":"197","line":17,"column":10,"nodeType":"157","messageId":"158","endLine":17,"endColumn":17},{"ruleId":"155","severity":1,"message":"198","line":59,"column":11,"nodeType":"157","messageId":"158","endLine":59,"endColumn":28},{"ruleId":"151","replacedBy":"199"},{"ruleId":"153","replacedBy":"200"},{"ruleId":"155","severity":1,"message":"201","line":68,"column":20,"nodeType":"157","messageId":"158","endLine":68,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":88,"column":35,"nodeType":"204","messageId":"205","endLine":88,"endColumn":36,"suggestions":"206"},{"ruleId":"202","severity":1,"message":"207","line":88,"column":52,"nodeType":"204","messageId":"205","endLine":88,"endColumn":53,"suggestions":"208"},{"ruleId":"155","severity":1,"message":"184","line":1,"column":24,"nodeType":"157","messageId":"158","endLine":1,"endColumn":33},{"ruleId":"155","severity":1,"message":"209","line":1,"column":34,"nodeType":"157","messageId":"158","endLine":1,"endColumn":43},{"ruleId":"155","severity":1,"message":"171","line":11,"column":18,"nodeType":"157","messageId":"158","endLine":11,"endColumn":28},{"ruleId":"161","severity":1,"message":"172","line":93,"column":34,"nodeType":"163","messageId":"164","endLine":93,"endColumn":36},{"ruleId":"155","severity":1,"message":"210","line":4,"column":7,"nodeType":"157","messageId":"158","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"184","line":1,"column":24,"nodeType":"157","messageId":"158","endLine":1,"endColumn":33},{"ruleId":"155","severity":1,"message":"209","line":1,"column":34,"nodeType":"157","messageId":"158","endLine":1,"endColumn":43},{"ruleId":"155","severity":1,"message":"211","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":18},{"ruleId":"151","replacedBy":"212"},{"ruleId":"153","replacedBy":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'HorizontalSplitRounded' is defined but never used.","'spacing' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["214"],["215"],"'ViewSellerOrders' is defined but never used.","'Redirect' is defined but never used.","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'setHistory' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.",["214"],["215"],"'handleChangeIndex' is assigned a value but never used.","'request' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idtest'. Either include it or remove the dependency array.","ArrayExpression",["216"],["214"],["215"],"'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'flexbox' is defined but never used.","'handleExpandClick' is assigned a value but never used.",["214"],["215"],"'setSerialID' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["217","218"],"Unnecessary escape character: \\/.",["219","220"],"'Component' is defined but never used.","'options' is assigned a value but never used.","'useField' is defined but never used.",["214"],["215"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"messageId":"223","fix":"224","desc":"225"},{"messageId":"226","fix":"227","desc":"228"},{"messageId":"223","fix":"229","desc":"225"},{"messageId":"226","fix":"230","desc":"228"},"Update the dependencies array to be: [idtest]",{"range":"231","text":"232"},"removeEscape",{"range":"233","text":"234"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"235","text":"236"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"237","text":"234"},{"range":"238","text":"236"},[4908,4910],"[idtest]",[2400,2401],"",[2400,2400],"\\",[2417,2418],[2417,2417]]